<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网站目前正在不断修改中，敬请期待</title>
    <url>/2023/03/30/A-0001/</url>
    <content><![CDATA[<p>欢迎来到我的个人博客，由于急于上线，目前博客还有很多不足（基本只是框架），不过我会逐步修改到位的。<br>————Cu.Li.Zn</p>
<p>测试用：<br>我的博客首页链接： <a href="https://culizn.cn/">未择之所</a></p>
<span id="more"></span>

<h3 id="2023年3月29日更新日志："><a href="#2023年3月29日更新日志：" class="headerlink" title="2023年3月29日更新日志："></a>2023年3月29日更新日志：</h3><p>增加网站个性化logo（本人设计，逐渐优化中）</p>
<h3 id="2023年3月30日更新日志："><a href="#2023年3月30日更新日志：" class="headerlink" title="2023年3月30日更新日志："></a>2023年3月30日更新日志：</h3><p>增加背景图片：艾文在时空回廊？（来自漫画《猫箱反转》的美图）<br>开启盘古UI(据说会更美观，但是我没看出来)<br>去除网站底部驱动字样<br>去除默认初始文章：hello world.md<br>修改错别字（x<br>解决每次push后要重新绑定域名的问题（主要是懒才拖到现在）<br>为本更新文章设置了标签和分类（可以自行查看）<br>书写了简短的关于页面（按我的风格最终可能变得相当冗长，所以目前可以看作实验性的初次测试）<br>目前明显存在的问题如部分页面还无指向或者其他等等，将在接下来的更新中完成（希望如此）<br>晚安。  </p>
<h3 id="2023年3月31日更新日志："><a href="#2023年3月31日更新日志：" class="headerlink" title="2023年3月31日更新日志："></a>2023年3月31日更新日志：</h3><p>修改网站个性化logo<br>增加本人Github链接  </p>
<h3 id="2023年4月5日血泪记忆："><a href="#2023年4月5日血泪记忆：" class="headerlink" title="2023年4月5日血泪记忆："></a>2023年4月5日血泪记忆：</h3><p>不要一口气改很多设定不测试预览，出现了一个问题你甚至不知道到底哪里有问题<br>记录：由于设置post-block 透明度为0，而jquery库似乎有问题（搜查半天找到了相关求助）  </p>
<h3 id="2023年4月6日更新日志："><a href="#2023年4月6日更新日志：" class="headerlink" title="2023年4月6日更新日志："></a>2023年4月6日更新日志：</h3><p>多次调整后，虽然解决了页面文字不显示（透明度为0）的问题，但是头像和社交图标消失了（悲<br><strong>最后，决定推翻重来</strong><br><strong>从零开始的主题修改，重新克隆了NEXT主题的文件</strong><br>1、修改了UI为Gemini<br>2、开启分类、标签、关于、归档<br>3、增加头像Drinking<br>4、设置圆形头像框<br>5、设置github链接\设置只显示图标<br>6、设置背景图片  </p>
<p>到此基本完成初步设置<br>未来的计划是增加评论系统、文章字数统计和推荐阅读等<br>啊，忘了logo了<br>（明天再说</p>
<h3 id="2023年4月7日更新日志"><a href="#2023年4月7日更新日志" class="headerlink" title="2023年4月7日更新日志"></a>2023年4月7日更新日志</h3><p>1、增加logo<br>2、增加访客统计和阅读次数统计<br>3、增加阅读进度显示<br>4、修改代码样式为预设solarized<br>5、将回到顶部按钮放在侧边栏，并显示阅读百分比<br>6、在更新日志开头添加了本博客首页链接<br>7、修改文章链接默认颜色为蓝色  </p>
<p>因为准备追求一下本人的幸运数之一7所以今天就到这里了<br>接下来的计划有版权声明、评论系统、推荐阅读、鼠标图标等<br>怎么画的饼和昨天没差多少（难的、麻烦的都留下来了）</p>
<p>补充，本地安装了markdownpad2，但是根据使用体验来说，我可能还是会主要用vscode直接手搓文章，因为即时书写感挺好的，而且页面也清爽，可能过一阵子要插入数学公式的文章部分会用markdownpad2来写。</p>
<h3 id="2023年4月10日更新日志"><a href="#2023年4月10日更新日志" class="headerlink" title="2023年4月10日更新日志"></a>2023年4月10日更新日志</h3><p>1、修改页面卡片为圆角<br>2、增加文章末尾版权说明<br>3、增加文章字数统计和阅读时长估算  </p>
<h3 id="2023年4月11日更新日志"><a href="#2023年4月11日更新日志" class="headerlink" title="2023年4月11日更新日志"></a>2023年4月11日更新日志</h3><p>修改版权说明的文章链接为本域名（昨天没注意到这个问题  </p>
<h3 id="2023年4月14日更新日志"><a href="#2023年4月14日更新日志" class="headerlink" title="2023年4月14日更新日志"></a>2023年4月14日更新日志</h3><p>1、增加文末“本文结束标志”  </p>
<h3 id="2023年4月16日更新日志"><a href="#2023年4月16日更新日志" class="headerlink" title="2023年4月16日更新日志"></a>2023年4月16日更新日志</h3><p>1、更换头像为自己绘画一幅<br>2、修改头像边框为方形<br>3、增加头像转动功能<br>4、修改回到顶部按钮独立<br>5、社交链接显示网站名<br>6、增加本地搜索功能（在侧边栏）<br>7、增加代码块复制功能并修改为mac样式<br>8、增加鼠标点击样式</p>
<h3 id="2023年4月25日更新日志"><a href="#2023年4月25日更新日志" class="headerlink" title="2023年4月25日更新日志"></a>2023年4月25日更新日志</h3><p>修改头像图像周边为圆角，以此适应整体风格</p>
<h3 id="2023年4月28日更新日志"><a href="#2023年4月28日更新日志" class="headerlink" title="2023年4月28日更新日志"></a>2023年4月28日更新日志</h3><p>1、增加来必力评论功能（本来是准备搞gitalk的，但是一定要github账户感觉太严苛了喵）<br>2、测试了文章折叠功能</p>
<h3 id="2023年5月2日更新日志"><a href="#2023年5月2日更新日志" class="headerlink" title="2023年5月2日更新日志"></a>2023年5月2日更新日志</h3><p>1、增加了编程相关文章和读书笔记各一篇<br>2、增加了文章置顶功能（并置顶了本日志）<br>3、修正了代码块粘连（？）的错误</p>
<h2 id="仍在调试，敬请期待"><a href="#仍在调试，敬请期待" class="headerlink" title="仍在调试，敬请期待"></a>仍在调试，敬请期待</h2><p>另附：代码块的样式</p>
<h4 id="C-的样式"><a href="#C-的样式" class="headerlink" title="C++的样式"></a>C++的样式</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;hello everyone&quot;</span>&lt;&lt;endl; <span class="comment">//cpp的样式</span></span><br><span class="line"><span class="comment">//下面是随便翻出来的习题代码</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">15</span>][<span class="number">15</span>],b[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">      cin&gt;&gt;a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">          b[j][n-i+<span class="number">1</span>]=a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">         cout&lt;&lt;b[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">         cout&lt;&lt;endl;</span><br><span class="line">         &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="python的样式"><a href="#python的样式" class="headerlink" title="python的样式"></a>python的样式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;here is my blog&quot;</span>) <span class="comment">#python 的样式</span></span><br><span class="line"><span class="comment">#下面是随便翻出来的习题代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Good_student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a+b</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">multiplicate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a*b</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bad_student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a-b</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">multiplicate</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="keyword">return</span> a/b</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">algo</span>(<span class="params">good_student, a, b</span>):</span><br><span class="line">    <span class="built_in">print</span>(good_student.add(a, b))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span> % good_student.multiplicate(a, b))</span><br><span class="line"></span><br><span class="line">a = Good_student()</span><br><span class="line">b = Bad_student()</span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">y = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">algo(a, x, y)</span><br><span class="line">algo(b, x, y)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Logs</category>
        <category>日志</category>
      </categories>
      <tags>
        <tag>Blogs</tag>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Try</tag>
        <tag>尝试</tag>
      </tags>
  </entry>
  <entry>
    <title>网站目前正在不断修改中，敬请期待</title>
    <url>/2023/05/05/S-0001/</url>
    <content><![CDATA[<h1 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h1><p>注： 本文本为我自学准备完成期末课程设计时所做笔记，主要内容来自 <a href="https://zh.d2l.ai/chapter_linear-networks/linear-regression.html">这个网站</a><br>特此说明。</p>
<span id="more"></span>

<h2 id="什么是线性回归？"><a href="#什么是线性回归？" class="headerlink" title="什么是线性回归？"></a>什么是线性回归？</h2><p>一个最简单而且最流行的回归模型<br>如<strong>y&#x3D;kx+b</strong><br>可以处理问题类型：预测数值</p>
<h2 id="线性回归的基本元素-x2F-前提假设"><a href="#线性回归的基本元素-x2F-前提假设" class="headerlink" title="线性回归的基本元素&#x2F;前提假设"></a>线性回归的基本元素&#x2F;前提假设</h2><p>自变量x和因变量y，它们之间的关系是<strong>线性</strong>的<br>假设噪声比较<em>正常</em>，如噪声遵循正态分布等</p>
<h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p><strong>训练数据集&#x2F;训练集</strong>：用于训练模型而准备的真实数据集<br><strong>样本&#x2F;数据点&#x2F;数据样本</strong>：训练数据集中每一行数据</p>
<p><strong>标签&#x2F;目标</strong>：试图预测的对象<br><strong>特征&#x2F;协变量</strong>：预测依据的自变量</p>
<h3 id="常见表示"><a href="#常见表示" class="headerlink" title="常见表示"></a>常见表示</h3><p>n表示数据集中样本数</p>
<h2 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h2><p>常见形式为：<br>y&#x3D;w1x1+w2x2+……+wdxd+b<br>其中：<br>wi为权重（weight），决定每个特征对预测值的影响<br>b为偏置&#x2F;偏移量&#x2F;截距<br>从数学上，上式是输入特征的一个仿射变换<br>总体上，我们需要寻找这个模型。</p>
<p>噪声的作用：处理可能存在的少量观测误差</p>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><p>想象一个所有特征差值平方和的平均数<br>就是那个。<br>当求得模型在所有训练样本上总损失最小时，即为我们所求模型。</p>
<h2 id="解析解"><a href="#解析解" class="headerlink" title="解析解"></a>解析解</h2><p>一个公式表达的解<br>对问题限制很严格，导致它无法广泛应用在深度学习里。</p>
<h2 id="随机梯度下降"><a href="#随机梯度下降" class="headerlink" title="随机梯度下降"></a>随机梯度下降</h2><p>ps：以下部分原文复制较多</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>梯度下降（gradient descent）： 这种方法几乎可以优化所有深度学习模型。 它通过不断地在损失函数递减的方向上更新参数来降低误差。</p>
<h3 id="什么是随机梯度下降"><a href="#什么是随机梯度下降" class="headerlink" title="什么是随机梯度下降"></a>什么是随机梯度下降</h3><p>最简单：计算损失函数（数据集中所有样本的损失均值） 关于模型参数的导数（在这里也可以称为梯度） 但实际中的执行可能会非常<strong>慢</strong>：因为在每一次更新参数之前，我们<strong>必须遍历整个数据集</strong>。 因此，我们通常会在每次需要计算更新的时候<strong>随机抽取一小批样本</strong>， 这种变体叫做<strong>小批量随机梯度下降</strong>（minibatch stochastic gradient descent）</p>
<p>在每次迭代中，我们首先随机抽样一个小批量， 它是由固定数量的训练样本组成的。 然后，我们计算小批量的平均损失关于模型参数的导数（也可以称为梯度）。 最后，我们将梯度乘以一个预先确定的正数，并从当前参数的值中减掉。<br>总结一下，算法的步骤如下： （1）初始化模型参数的值，如随机初始化； （2）从数据集中随机抽取小批量样本且在负梯度的方向上更新参数，并不断迭代这一步骤。</p>
<p>在训练了预先确定的若干迭代次数后（或者直到满足某些其他停止条件后）， 我们记录下模型参数的估计值，表示为w,b。 但是，即使我们的函数确实是线性的且无噪声，这些估计值也不会使损失函数真正地达到最小值。 因为算法会使得损失向最小值缓慢收敛，但却不能在有限的步数内非常精确地达到最小值。</p>
<h2 id="用模型进行预测"><a href="#用模型进行预测" class="headerlink" title="用模型进行预测"></a>用模型进行预测</h2><p>给定特征估计目标的过程通常称为预测（prediction）或推断（inference）</p>
<h2 id="矢量化加速"><a href="#矢量化加速" class="headerlink" title="矢量化加速"></a>矢量化加速</h2><p>矢量化代码通常会带来数量级的加速。<br><strong>建议直接进入上述网站查看</strong></p>
<h2 id="正态分布与平方损失"><a href="#正态分布与平方损失" class="headerlink" title="正态分布与平方损失"></a>正态分布与平方损失</h2><p><strong>建议直接进入上述网站查看</strong><br>因为我这边不会打公式（不）</p>
<h2 id="从线性回归到深度网络"><a href="#从线性回归到深度网络" class="headerlink" title="从线性回归到深度网络"></a>从线性回归到深度网络</h2><p>将线性回归看作单词神经网络</p>
<img src="https://z4a.net/images/2023/05/05/danceng.png"/>

<p>图示输出层即该神经网络的唯一计算神经元。<br>所以该神经网络层数为1，该模型为仅由单个人工神经元组成的神经网络，或称单层神经网络。</p>
<p>对于线性回归，每个输入都与每个输出（在本例中只有一个输出）相连， 我们将这种变换（ 图3.1.2中的输出层） 称为<strong>全连接层</strong>（fully-connected layer）或称为<strong>稠密层</strong>（dense layer）。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>神经网络</tag>
        <tag>编程相关</tag>
      </tags>
  </entry>
  <entry>
    <title>《四书章句集注》读书笔记——《大学》篇第二部分</title>
    <url>/2023/05/05/B-0002/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><p>这里是我近期参加学校阅读课程的读书笔记和闲杂回答，不能完全代表本人观点，只是一些当时书写时的思考和文字记录。<br>其中问题，是学校老师提出，以让学生解答的。特此简要说明。<br>这些文字，可能会过些时日分批整理放出。用于填补我的博客内容。</p>
<span id="more"></span>

<h1 id="《大学》第二部分"><a href="#《大学》第二部分" class="headerlink" title="《大学》第二部分"></a>《大学》第二部分</h1><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><h3 id="Q"><a href="#Q" class="headerlink" title="Q:"></a>Q:</h3><p>你在生活中有类似“骑自行车”的状态么？<br>导读中，我举过骑自行车的例子，就是说，我们与自己所处世界的关系，一般而言是主客对立的关系，因为我们总是使用理性思考隔断了我们自身与所处世界先在的一体关系。我们的身体、在世是先于理性思考的，这潜在地决定了我们的生存方式，在某种程度上，每个人都是被抛入这个世界。而当我们沉浸在自己所从事的事务时，那种与世界一体的状态就会显现出来，就像骑自行车时不会意识到骑车，车子不是外在的对象，而是我的身体一部分，车轮就是我的脚，我可以自觉地调整穿过窄道，也可以躲避行人、车辆，不让它们碰到自己……这是我们突破自己扮演的社会角色，突破社会对我们的支解和异化，从而回归自身，开启自觉人生的重要一面。这是人与世界原始关系的呈现。儒家叫“天人合一”“与仁同体”，佛教叫“三昧”，道家叫“逍遥游”</p>
<h3 id="A"><a href="#A" class="headerlink" title="A:"></a>A:</h3><p>老师所言的“骑自行车的状态”，我来理解的话，就代表着天人合一的、如臂使指的圆融状态。</p>
<p>更加确切地说，就是自如地运用乃至可以忽视所投入的精力和思考的状态。真要说的话，在我的记忆所及，我基本没有这种状态的经历（骑自行车倒是确实很自然）。如果让我来解释的话，这可能是因为我信奉以理性控制感性，以逻辑克制冲动和冒进，用思考取代直觉的生活方式。这种行为模式由我对纯粹理性的赞同而来，形成了我基本的生存状态。我对于我必然处于社会角色中，必然以人的身份与世界交互，必然是与世界处于两极位置这一理解认知接受十分良好，并坚定贯彻着理性思考在我行为判断中的首要地位。</p>
<p>我的理性要求做我行为的主人，成为所有行为的决定者。我希冀我在人生的任何一个时期回首，都从不为过去的决定和所后悔，所以，即使因此失去与世界的一体性，也并不为此伤怀。</p>
<h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><h3 id="Q1"><a href="#Q1" class="headerlink" title="Q1:"></a>Q1:</h3><p>你觉得《大学》所说的治国、平天下的基础在于正心、诚意、格物致知，有道理么？为什么？</p>
<h3 id="A1"><a href="#A1" class="headerlink" title="A1:"></a>A1:</h3><p>说治国、平天下的基础在于正心、诚意、格物致知，我觉得是有道理的。</p>
<p>能定一国者，必然有端正的思想态度，必然应当有正确的认知分析客观事实的能力，而且必然有非常意志信念，方能治理好一个国家。</p>
<p>当然，只有这些依然不足，我以为术道二者，同样重要，治国理政，须有方略。没有明亮的眼睛，看不见前进的方向；没有明亮的心，辨不清前进的原因。内修心性，外修谋略，二者齐备，才能算是合格的治国人才。</p>
<p>没有根基，注定无法建立楼阁，而建筑本身，不只需要根基，还需要合理的架构、坚实的材料、精湛的工艺。治国平天下，同理。</p>
<h3 id="Q2"><a href="#Q2" class="headerlink" title="Q2:"></a>Q2:</h3><p>《大学》乃至中国传统文化重道德、人的明德之开显，忽视科学、理性等，而正是我们这个时代所需要的，请问，你觉得怎样在科技、经济大发展的今天保持我们的传统文化？</p>
<h3 id="A2"><a href="#A2" class="headerlink" title="A2:"></a>A2:</h3><p>说来道去，依然只有“取其精华”四字可谈。</p>
<p>古为今用，着重于用字，虽然中国传统文化忽视科学（我并不认为它忽视理性），但是依然有足够璀璨而重要的思想蕴含其中。譬如说，“周虽旧邦，其命维新”的革新精神；譬如说，“苟利国家生死以，岂因祸福避趋之”的爱国情怀；譬如说，“三人行必有我师焉”的谦虚好学；譬如说“兼爱非攻”的博爱理想主义……</p>
<p>题中说《大学》乃至中国传统文化重道德、人的明德之开显。重道德是坏事吗？并不是。那么我们是不是已经可以得出一部分结论，即在本时代的道德建设中，取传统文化中符合现代公序良俗的部分是非常有益的呢？</p>
<p>再回到《大学》乃至中国传统文化忽视科学的一点，显然这是这种文化的一大短板，然而也并不是说，我们学习传统文化就要忽视科学，我相信中国古人的智慧里，实用理性是非常重要的一块，以前忽视科学，是没有认知到科学在社会发展中的重要性，那么现在历史给了我们答案，我们自然可以将注重科学与传统文化一同融合使用，需要信念的时候看向历史，需要力量的时候握住科学。</p>
<p>总而言之，在需要什么的时候，去做什么，这样子，传统文化的保存自然不是需要特别讨论的东西了。</p>
<p>2023年5月5日整理发送</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>阅读笔记</tag>
        <tag>四书章句集注Q&amp;A</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode相对路径报错原因</title>
    <url>/2023/05/04/E-0001/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>今天在vscode用python尝试opencv库基础操作——调用图片并打开时，发生了相对路径不断报错，但绝对路径可以直接打开的情况。</p>
<span id="more"></span>
<p>前提：vscode打开的文件夹是pythons</p>
<p>绝对路径代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;E:/pythons/cvdeal/datas/orig/2092.png&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;2092&#x27;</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>出错的相对路径代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./datas/orig/2092.png&#x27;</span>,<span class="number">0</span>) <span class="comment">#灰度打开 #./代表省略前面文件夹的路径</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;2092&#x27;</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>vscode中，默认的同级文件夹是“打开”的文件夹，而不是执行文件所处的当前文件夹。<br>也就是说，当vscode打开了我的文件夹”E:&#x2F;pythons&#x2F;“，而我执行的文件处于”pythons”文件夹下的文件夹”cvdeal”时，相对路径的书写应该写为’.&#x2F;cvdeal&#x2F;datas&#x2F;orig&#x2F;2092.png’</p>
<h1 id="修改后代码形式"><a href="#修改后代码形式" class="headerlink" title="修改后代码形式"></a>修改后代码形式</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;./cvdeal/datas/orig/2092.png&#x27;</span>,<span class="number">0</span>) <span class="comment">#灰度打开</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;2092&#x27;</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h1 id="其他修改方式-（推荐）"><a href="#其他修改方式-（推荐）" class="headerlink" title="其他修改方式 （推荐）"></a>其他修改方式 （推荐）</h1><p>建议直接打开目前处理的文件夹，不要打开它的父文件夹（认真）。<br>这样总体方便，而且方便代码的迁移运用。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>更改正确后，我才想起之前在其他问题的编程中好像也有过这个问题，但是当时解决完很快又忘了（不长记性……），所以特此记录，也希望可以帮到其他遇到此问题的人。</p>
<p>2023年5月4日_Cu.Li.Zn</p>
]]></content>
      <categories>
        <category>基础报错处理</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>《四书章句集注》读书笔记——《大学》篇第一部分</title>
    <url>/2023/05/02/B-0001/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><p>这里是我近期参加学校阅读课程的读书笔记和闲杂回答，不能完全代表本人观点，只是一些当时书写时的思考和文字记录。<br>其中问题，是学校老师提出，以让学生解答的。特此简要说明。<br>这些文字，可能会过些时日分批整理放出。用于填补我的博客内容。</p>
<span id="more"></span>

<h1 id="《大学》第一部分"><a href="#《大学》第一部分" class="headerlink" title="《大学》第一部分"></a>《大学》第一部分</h1><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><h3 id="Q"><a href="#Q" class="headerlink" title="Q:"></a>Q:</h3><p>读《大学章句序》，你认同朱子给出的人生观吗？<br>在这篇序文中，朱子给出的人生观是：天赋予人“仁义礼智”的本性，现实中的人，自身以及社会历史条件有限，不能完全透显这种本性，因而需要先觉的圣人、君主，来教化大众开显其本性。所以，开显天赋的本性是中国古人理解的人生意义所在，自我成就的根本。</p>
<h3 id="A"><a href="#A" class="headerlink" title="A:"></a>A:</h3><p>天赋人性，我是认可的，然而，朱子认为天赋予人的是“仁义礼智之性”，我不能赞同。</p>
<p>所谓天赋人性，按我的理解，乃生命本源赋予我们人类的生存本能：浅层基础的，便表现为活下去的能力，即饿了懂得觅食，渴了晓得饮水，天黑懂得躲藏，这些种种的生存本能至今依然存在于我们身体里面，然而，在群居性文明中的我们（人类），将这种简单的生存本能，架构成为更加复杂的结构，即活得好的能力，因为相互帮助可以改善生活的条件，因为相互支持可以改变生存的形式，因为朴素正义可以改变我们的生活质量、让生活更加安全、让生存成为更加理所当然的事情，于是，我们承认这种善良为人天性的一部分，无论是因为这是天性而让我们活得更好，还是因为我们因它活得更好而以它为天性，性善论都可以有其意义。</p>
<p>基因决定了我们，基因影响着我们，基因正是我们天赋之性的来源。一代又一代，我们接受着社会意识的影响，兼之我们的各自的“天性”，不断打磨影响着所谓“天赋之性”，数十万年前，为了生存，智人走出非洲，和世界各地的猿人战争；一万多年前，一个人受伤，有人为他包扎伤口，有人为他提供食物；几千年前，我们相信，士庶有别，而现在，我们相信，人人平等；从久远的彼端一路行至此时此刻，我们有一直相信的东西，也有改变了的普遍想法，一切都是为了更好地生存，这就是天赋之性的本质。</p>
<p>所以，处于恶劣环境的人，往往偏向性恶，因为他潜意识意识到保持朴素正义不能使得他从目前的环境中获得足够的资源使得他可以生存得更好，那么偏向残忍本能便成为理所当然的事情。对于孩子乃至一些成年人，所谓教化，便是让他意识到何为目前环境需要的道德法则，以此构建这一类的社会关系。这也解释一些性无论的观点是从何而来。</p>
<p>以上是我对“天赋之性”的理解，基于这种理解，我们可以将目光转向朱熹的人生观：不妨把先觉的圣人、君主这种所谓的“先觉者”，修改为由于阅历更多眼界更广，而很好地理解了一些社会观念并加以总结思考的“先行者”，他们并不能说是在先天认知上有超越之处，而是应该评价为在后天经验上有过人之处，所起到的主要作用是延续前者的思想，创立自己的观点，并将这些传递给后来者，从影响上看，一些好书可以起到这种教化者相似的作用。</p>
<p>这种实际上是文明的赓续，是先前之人交予后来之人的认知经验，是社会意识的逐代更迭，我当然认可，我们的生存本身一定有着某种意义，使得我们一定要坚持前行，历经万代不衰，即使我不将它作为前进的理由和方向，我行走于这条道路上，是为了我所相信的东西，是为了我的成长和前进，是为了我可以自己创造出自己的意义，是为了将我的正义贯彻下去，为了我的正义，我想，甚至可以排斥与我的意义对抗的、“天所赋予的”生存意义。</p>
<p>什么是人生的意义？什么是我的人生观？这就是我的回答。</p>
<h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><h3 id="Q1"><a href="#Q1" class="headerlink" title="Q1:"></a>Q1:</h3><p>朱子理解的人类生存的意义是什么？并且，受朱子的启发，谈谈你对生存的意义的理解。</p>
<h3 id="A1"><a href="#A1" class="headerlink" title="A1:"></a>A1:</h3><p>在四书章句集注序中，有“盖自天降生民，则即不莫与之以仁义礼智之性矣。”，显示出朱子对人之本质的理解：人是天所生之物，天生具有美德，问题在于不能完全表现出这种天性的美德，又思及朱子“存天理灭人欲”的理学思想，不难看出，朱熹的这部分观点，折射出他对人类生存意义的态度：即人类生存是为了逐渐接近天生的仁义礼智之性，并按天理而行动，以此达到更高的境界，便是人生的意义。简而言之，人生的意义便是使得个人品德不断臻于完善的过程，是实践道德准则的过程。</p>
<p>总体来讲，对于朱熹对不断提升自身修养的观点，我是完全认同的。因为我以为，人活着必然有一个意义，即使我不将它作为前进的理由和方向，我行走于这条道路上，是为了我所相信的东西，是为了我的成长和前进，是为了我可以自己创造出自己的意义，是为了将我的正义贯彻下去，为了我的正义，我想，甚至可以排斥与我的意义对抗的、“天所赋予的”生存意义。这就是我的回答。</p>
<h3 id="Q2"><a href="#Q2" class="headerlink" title="Q2:"></a>Q2:</h3><p>为什么中国古代社会是一个崇尚圣人、皇帝的社会？为什么有的皇帝是个小孩子、是个无能的昏君，可是还得到全国的尊崇，尤其是那些有能力的大臣的尊崇？我们现代社会还需要这样么？</p>
<h3 id="A2"><a href="#A2" class="headerlink" title="A2:"></a>A2:</h3><p>我认为，崇尚圣人和皇帝应当分开来理解，崇尚圣人，是对于其知识德行有所钦慕，希冀以此来对自身修养有所增益，当然，也有对贤者美好品行的单纯仰慕。</p>
<p>崇尚皇帝，则是封建社会的格局所导致的一种必然结果。皇帝处于封建社会的核心位置，其政治地位和权力的存在，使得其不可避免成为一种抽象化的象征，无论推动这种象征的是皇帝本人的意志抑或是旁人的意志。这以后，忠君爱国的思想作为维系皇朝统治的根基之一，不断潜移默化地影响着古代社会的社会意识，皇帝的权威也成为了某种意义上的精神依靠。</p>
<p>理解了上述皇帝的权威是如何脱离皇帝本人而延续下来，便可以轻易回答为什么即使皇帝本人是小孩子或者昏君，依然可以得到全国的尊崇，因为其本身的个性并不是尊君文化最关注的部分，尊君文化最看重的是他代表的抽象意义，即皇帝概念的本身。</p>
<p>现代社会需要这样吗？实际上问的也应该分为两方面理解，对于正确理论和合理实践的推崇毫无疑问是必要的，这是时代发展的必然要求。但是，是否应当保留合适的个人崇拜？我认为对贤能之人的推崇依然是必要的，而且我们无法避免对一些远胜于我们的人产生崇敬心理，即使这可能让人不妙地想起个人崇拜主义。然而，由人组成的社会，我们在比较、崇拜、追逐中增进自身，正是一条明朗可见的道路。</p>
<p>2023年5月2日整理发送。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>阅读笔记</tag>
        <tag>四书章句集注Q&amp;A</tag>
      </tags>
  </entry>
  <entry>
    <title>python Numpy 简单入门（一）</title>
    <url>/2023/05/02/A-0002/</url>
    <content><![CDATA[<h1 id="Numpy简单入门"><a href="#Numpy简单入门" class="headerlink" title="Numpy简单入门"></a>Numpy简单入门</h1><p>个人笔记，如有错漏补充欢迎指出，部分描述直接来自菜鸟教程<br>这里主要是一些我平时用到的一些用法记录，不完全，随时间更新。  </p>
<span id="more"></span>

<h2 id="Numpy是什么"><a href="#Numpy是什么" class="headerlink" title="Numpy是什么"></a>Numpy是什么</h2><p>NumPy 是一个运行速度非常快的数学库，主要用于数组计算，包含：  </p>
<p>一个强大的N维数组对象 ndarray<br>广播功能函数<br>整合 C&#x2F;C++&#x2F;Fortran 代码的工具<br>线性代数、傅里叶变换、随机数生成等功能<br><strong>PS：考虑我能力的局限，本文主要探讨有关N维数组的运用</strong>  </p>
<h2 id="Numpy安装"><a href="#Numpy安装" class="headerlink" title="Numpy安装"></a>Numpy安装</h2><p>我推荐用pip安装，因为比较简单<br>1、管理员权限打开cmd<br>2、输入  </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip install numpy  </span><br></pre></td></tr></table></figure>

<p>3、结束  </p>
<h2 id="Numpy入门级使用"><a href="#Numpy入门级使用" class="headerlink" title="Numpy入门级使用"></a>Numpy入门级使用</h2><h3 id="Ndarray对象（N维数组对象）"><a href="#Ndarray对象（N维数组对象）" class="headerlink" title="Ndarray对象（N维数组对象）"></a>Ndarray对象（N维数组对象）</h3><h4 id="创建一个Ndarray对象"><a href="#创建一个Ndarray对象" class="headerlink" title="创建一个Ndarray对象"></a>创建一个Ndarray对象</h4><p><strong>一维数组</strong>：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>

<p>输出结果：<br>[1 2 3]</p>
<p>二维数组：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#多于一个维度    </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np   </span><br><span class="line">a = np.array([[<span class="number">1</span>,  <span class="number">2</span>],  [<span class="number">3</span>,  <span class="number">4</span>]])    </span><br><span class="line"><span class="built_in">print</span> (a)  </span><br></pre></td></tr></table></figure>

<p>输出结果：<br>[[1  2]<br> [3  4]]</p>
<p><strong>最小维度</strong>：<br>ndmin参数处理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], ndmin =  <span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>

<p>输出结果：<br>[[1 2 3 4 5]]</p>
<p><strong>数组元素的数据类型</strong>：<br>dtype参数处理<br>示例（复数类型）：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>], dtype = <span class="built_in">complex</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>

<p>输出结果：<br>[1.+0.j 2.+0.j 3.+0.j]</p>
<h4 id="Numpy自带好用函数"><a href="#Numpy自带好用函数" class="headerlink" title="Numpy自带好用函数"></a>Numpy自带好用函数</h4><p><strong>三角函数</strong>：<br>np.arctan(x)<br>PS：默认输出值为弧度制，可以通过*180&#x2F;pi转换<br>PPS:单个运算还是建议直接math函数，如果对角度范围（默认为-1&#x2F;2pi到+1&#x2F;2pi）有额外要求，可以增加判断条件修改结果</p>
<p><strong>四舍五入函数</strong>：<br>numpy.around(a,decimals)</p>
<p>a: 数组<br>decimals: 舍入的小数位数。 默认值为0。 如果为负，整数将四舍五入到小数点左侧的位置<br>使用效果：返回了一个新array数组。</p>
<p><strong>逐个索引方式</strong>：<br>忽视多维安排的迭代器方式：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> array.flat:</span><br><span class="line">    <span class="comment">#your actions here</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>numpy.ndarray.flat 是一个数组元素迭代器</p>
]]></content>
      <categories>
        <category>python</category>
        <category>编程相关</category>
      </categories>
      <tags>
        <tag>Numpy</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
